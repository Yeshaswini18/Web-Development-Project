{"version":3,"sources":["Receipt.jsx","TicketDetails.jsx","services.js","MovieDetails.jsx","MovieList.jsx","MyBookings.jsx","LoggedInPage.jsx","LoginPage.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Receipt","receipt","userInfo","movies","useState","back","setBack","status","className","onClick","src","poster","alt","QRcode","title","theater","timing","date","total","TicketDetails","movieInfo","error","setError","setTimings","setDate","tickets","setTickets","setReceipt","ticketPrice","today","Date","now","todayDate","Intl","DateTimeFormat","year","month","day","format","expiryDate","selectedDate","slice","lastDate","presentDate","performCheckout","Math","floor","username","movieId","fetch","method","headers","body","JSON","stringify","catch","Promise","reject","message","then","response","ok","json","err","fetchAddBooking","performReadBooking","data","bookingId","fetchGetBooking","language","for","name","onChange","e","target","value","Object","keys","timings","map","type","MovieDetails","book","setBook","description","ratings","MovieList","filteredMovies","setMovieInfo","view","setView","setLanguage","movieType","setMovieType","location","setLocation","refresh","setRefresh","performReadMovie","code","fetchGetMovie","reduce","r","includes","id","MyBookings","bookings","performViewBookings","console","log","performDelete","fetchDeleteBooking","LoggedInPage","loggedOut","setloggedOut","setBookings","performLogout","LoginPage","setUserInfo","setUsername","performLogin","test","fetchLogIn","App","content","setMovies","useEffect","sid","moviesList","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8e1f5282.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport MovieList from './MovieList';\nimport './App.css';\n\n\nfunction Receipt({receipt, userInfo, movies}) {\n    const [back, setBack] = useState(false);\n\n    if (back) {\n        return(\n            <div>\n                <MovieList movies={movies} userInfo={userInfo} status=\"loggedIn\" />\n            </div>               \n        );\n    }\n\n\n    return(\n        <div className=\"receipt\">\n            <button className=\"back-button\" onClick={() => setBack(true)}>Return to Home Page</button>\n            <h2 className=\"welcome-message\">Booking Successful!!!</h2>\n            <div>\n                <img className=\"single-image\" src={receipt.poster} alt=\"\"/>\n                <div className=\"movie-details\">\n                    <img className=\"QR-code\" src={receipt.QRcode} alt=\"\"/>\n                    <p className=\"title\"><b>Title: </b>{receipt.title}</p>\n                    <p className=\"theater\"><b>Theater: </b>{receipt.theater}</p>\n                    <p className=\"timing\"><b>Timing: </b>{receipt.timing}</p>\n                    <p className=\"Date\"><b>Date: </b>{receipt.date}</p>\n                    <p className=\"total\"><b>Total: </b>{receipt.total}</p>\n                </div>\n            </div>\n        </div>\n    );\n\n}\n\nexport default Receipt;","import React from 'react';\nimport {useState} from 'react';\nimport MovieList from './MovieList';\nimport {fetchAddBooking, fetchGetBooking} from './services';\nimport Receipt from './Receipt';\nimport './App.css';\n\nfunction TicketDetails ({userInfo, movies, movieInfo, status}){\n    const [error, setError] = useState();\n    const [timing, setTimings] = useState();\n    const [date, setDate] = useState();\n    const [tickets, setTickets] = useState(1);\n    const [back, setBack] = useState(false); \n    const [receipt, setReceipt] = useState();\n    let total = movieInfo.ticketPrice * tickets;\n\n    if (date) {\n        const today = Date.now();\n        const todayDate = new Intl.DateTimeFormat('en-US', {year: 'numeric', month: '2-digit',day: '2-digit'}).format(today);\n        const expiryDate = movieInfo.expiryDate;\n        const selectedDate = new Date(date.slice(0,4), date.slice(5,7)-1, date.slice(8,10));\n        const lastDate = new Date(expiryDate.slice(6,10), expiryDate.slice(0,2)-1, expiryDate.slice(3,5));\n        const presentDate = new Date(todayDate.slice(6,10), todayDate.slice(0,2)-1, todayDate.slice(3,5));\n        if(selectedDate > lastDate || selectedDate < presentDate){\n            setError(\"Enter a valid Date\");\n            setDate();\n        }\n    }\n\n    const performCheckout = () => {\n        setError('');\n\n        if (!date || !timing || tickets < 1) {\n            setError(\"All fields are required and has to be valid\");\n        } else if (tickets - Math.floor(tickets) !== 0) {\n            setError(\"Enter a valid ticket count\");\n        } else {\n            fetchAddBooking(userInfo, movieInfo.movieId, timing, date, tickets)\n            .then((receipt) => performReadBooking(receipt.data))\n            .catch((error) => setError(error.message))\n        }\n    }\n\n    const performReadBooking = (bookingId) => {\n        setError('');\n\n        fetchGetBooking(userInfo, bookingId)\n        .then((receipt) => setReceipt(receipt.data))\n        .catch((error) => setError(error.message))\n\n    }\n\n    if (receipt) {\n        return(\n            <Receipt receipt={receipt} movies={movies} userInfo={userInfo}/>\n        );\n    }\n\n    if(back){\n        return(\n            <MovieList movies={movies} userInfo={userInfo} status=\"loggedIn\"/>\n        );       \n    }\n\n    return(\n        <div className=\"booking\">\n            <h2 className=\"error\">{error}</h2>\n            <button className=\"back-button\" onClick={() => setBack(true)}>Return to Home Page</button>\n            <div>\n                <img className=\"single-image\" src={movieInfo.poster} alt=\"\"/>\n                <div className=\"movie-details\">\n                    <p className=\"title\"><b>Title: </b>{movieInfo.title}</p>\n                    <p className=\"language\"><b>Language: </b>{movieInfo.language}</p>\n                    <span className=\"timings\">\n                        <label for=\"time\">Select Timings:</label>\n                        <select name=\"time\" onChange={(e) => {setTimings(e.target.value)}}>\n                            <option value=\"select-time\">select-time</option>\n                            {Object.keys(movieInfo.timings).map((timing) => (               \n                                <option value={movieInfo.timings[timing]}>{movieInfo.timings[timing]}</option>               \n                            ))}\n                        </select>\n                    </span>\n                    <p className=\"expiry-date\"><b>Played till:</b>{movieInfo.expiryDate}</p>\n                    <p>\n                        <label for=\"Date\">Select date:</label>\n                        <input type=\"date\" name=\"movie-date\" onChange={(e) => setDate(e.target.value)}/>\n                    </p>\n                    <label>Number of Tickets: </label><input type=\"number\" name=\"tickets\" value={tickets} onChange={(e) => setTickets(e.target.value)}/>\n                    <h3 className=\"total-cost\">Total Amount:${total}</h3>\n                    <button className=\"checkout-button\" onClick={() => performCheckout()}>checkout</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default TicketDetails;\n","export const fetchHomePage = () => {\n    return fetch(`/session`, {\n        method: \"GET\"\n    })\n    .catch( () => {\n        return Promise.reject({message: 'network-error'});\n    })\n    .then( (response) => {\n        if(response.ok) {\n            return response.json();\n        }\n        return response.json()\n        .then( err => Promise.reject(err) );\n    });\n};\n\nexport const fetchLogIn = (username) => {\n    return fetch(`/session`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            username: username\n        })\n    })\n    .catch( () => {\n        return Promise.reject({message: 'network-error'});\n    })\n    .then( (response) => {\n        if(response.ok) {\n            return response.json();\n        }\n        return response.json()\n        .then( err => Promise.reject(err) );\n    });\n};\n\nexport const fetchLogOut = () => {\n    return fetch('/session', {\n        method: 'DELETE',\n    })\n    .catch( () => {\n        return Promise.reject({code: 'network-error'});\n    })\n    .then( (response) => {\n        if(response.ok) {\n            return response.json();\n        }\n        return response.json()\n        .then( err => Promise.reject(err) );\n    });\n};\n\nexport const fetchGetMovies = () => {\n    return fetch(`/movies`, {\n        method: 'GET',\n    })\n    .catch( () => {\n        return Promise.reject({code: 'network-error'});\n    })\n    .then( (response) => {\n        if(response.ok) {\n            return response.json();\n        }\n        return response.json()\n        .then( err => Promise.reject(err) );\n    });\n};\n\nexport const fetchGetMovie = (movieId) => {\n    return fetch(`/movies/${movieId}`, {\n        method: 'GET',\n    })\n    .catch( () => {\n        return Promise.reject({code: 'network-error'});\n    })\n    .then( (response) => {\n        if(response.ok) {\n            return response.json();\n        }\n        return response.json()\n        .then( err => Promise.reject(err) );\n    });\n};\n\nexport const fetchAddBooking = (username, movieId, timing, date, tickets) => {\n    return fetch(`/bookings/${username}`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            movieId: movieId,\n            timing: timing,\n            date: date,\n            tickets: tickets\n        })\n    })\n    .catch( () => {\n        return Promise.reject({message: 'network-error'});\n    })\n    .then( (response) => {\n        if(response.ok) {\n            return response.json();\n        }\n        return response.json()\n        .then( err => Promise.reject(err) );\n    });\n};\n\nexport const fetchGetBooking = (username, bookingId) => {\n    return fetch(`/bookings/${username}/${bookingId}`, {\n        method: 'GET'\n    })\n    .catch( () => {\n        return Promise.reject({message: 'network-error'});\n    })\n    .then( (response) => {\n        if(response.ok) {\n            return response.json();\n        }\n        return response.json()\n        .then( err => Promise.reject(err) );\n    });\n};\n\nexport const fetchDeleteBooking = (username, bookingId) => {\n    return fetch(`/bookings/${username}/${bookingId}`, {\n        method: 'DELETE'\n    })\n    .catch( () => {\n        return Promise.reject({message: 'network-error'});\n    })\n    .then( (response) => {\n        if(response.ok) {\n            return response.json();\n        }\n        return response.json()\n        .then( err => Promise.reject(err) );\n    });\n};\n\n\nexport const fetchGetBookings = (username) => {\n    return fetch(`/bookings/${username}`, {\n        method: 'GET'\n    })\n    .catch( () => {\n        return Promise.reject({message: 'network-error'});\n    })\n    .then( (response) => {\n        if(response.ok) {\n            return response.json();\n        }\n        return response.json()\n        .then( err => Promise.reject(err) );\n    });\n};\n","import React, { useState } from 'react';\nimport TicketDetails from './TicketDetails';\nimport MovieList from './MovieList';\nimport './App.css';\n\nfunction MovieDetails ({movieInfo, status, movies, userInfo}) {\n    const [back, setBack] = useState(false);\n    const [book, setBook] = useState(false);\n    const [error, setError] = useState('');\n\n    if (book){\n        if (status === \"loggedOut\") {\n            setError(\"Login to book\")\n            setBook(false);\n        } else{\n            return (\n                <TicketDetails userInfo={userInfo}  movies={movies} movieInfo={movieInfo} status={status}/>\n            );\n        }      \n    }\n\n    if (back) {\n        if (status === \"loggedIn\") {\n            return(\n                <div>\n                    <MovieList movies={movies} userInfo={userInfo} status=\"loggedIn\" />\n                </div>               \n            );\n        } else {\n            return(\n                <div>\n                    <MovieList movies={movies} userInfo=\"       \" status=\"loggedOut\" />\n                </div>\n            );\n        }\n    }\n\n    return (   \n        <div className=\"movie\">\n            <h2 className=\"error\">{error}</h2>\n            <button className=\"back-button\" onClick={() => setBack(true)}>Return to Home Page</button>\n            <div>\n                <img className=\"single-image\" src={movieInfo.poster} alt=\"\"/>\n                <div className=\"movie-details\">\n                    <p className=\"title\"><b>Title: </b>{movieInfo.title}</p>\n                    <p className=\"language\"><b>Language: </b>{movieInfo.language}</p>\n                    <p className=\"description\"><b>Description: </b>{movieInfo.description}</p>\n                    <p className=\"ratings\"><b>Ratings: </b>{movieInfo.ratings}</p>\n                    <p className=\"ticket-price\"><b>ticket Price: </b>{movieInfo.ticketPrice}</p>\n                    <p className=\"theater\"><b>Theater: </b>{movieInfo.theater}</p>\n                    <p className=\"expiry-date\"><b>Played till:</b>{movieInfo.expiryDate}</p>\n                    <label for=\"timings\">Available timinigs:</label>            \n                    {Object.keys(movieInfo.timings).map((timing) => (               \n                        <button className=\"timing\" value={movieInfo.timings[timing]}>{movieInfo.timings[timing]}</button>               \n                    ))} \n                    <button className=\"book-button\" onClick={() => setBook(true)}>Book</button> \n                </div> \n            </div>         \n        </div>   \n    );\n}\n\nexport default MovieDetails;","import React, { useState } from 'react';\nimport {fetchGetMovie} from './services';\nimport MovieDetails from './MovieDetails';\n\nfunction MovieList({movies, status, userInfo}){\n    const [error, setError] = useState();\n    const [movieInfo, setMovieInfo] = useState();\n    const [view, setView] = useState(false);\n    const [language, setLanguage] = useState();\n    const [movieType, setMovieType] = useState();\n    const [location, setLocation] = useState();\n    const [refresh, setRefresh] = useState(false);\n    let filteredMovies;\n    if (!movies) {\n        filteredMovies = {};\n    } else {\n        filteredMovies = movies;\n    }\n    \n\n    const performReadMovie = (movieId) => {       \n        setError('');\n\n        fetchGetMovie(movieId)\n        .then((movieInfo) => {setMovieInfo(movieInfo.data); setView(true)})\n        .catch((error) => setError(error.message))        \n    }\n\n    if (refresh) {\n        if(language || movieType || location) {\n            setLanguage();\n            setLocation();\n            setMovieType();\n        } else {\n            filteredMovies = movies;\n            setRefresh(false);\n        }\n    }\n\n    if(view) {\n        return(\n            <MovieDetails movieInfo={movieInfo} status={status} movies={movies} userInfo={userInfo}/>\n        );\n    }\n\n    if (language) {\n        if (language === \"select-language\") {\n            setLanguage();\n        } else {\n            filteredMovies = Object.keys(filteredMovies).reduce(function(r,e) {\n                if(language.includes(filteredMovies[e].language)) r[e] = filteredMovies[e]\n                return r\n            },{})\n        }\n    }\n\n    if (movieType) {\n        if(movieType === \"select-Type\") {\n            setMovieType();\n        } else {\n            filteredMovies = Object.keys(filteredMovies).reduce(function(r,e) {\n                if(movieType.includes(filteredMovies[e].movieType)) r[e] = filteredMovies[e]\n                return r\n            },{})\n        }\n    }\n\n    if (location) { \n        if (location === \"select-location\") {\n            setLocation();\n        } else {\n            filteredMovies = Object.keys(filteredMovies).reduce(function(r,e) {\n                if(location.includes(filteredMovies[e].location)) r[e] = filteredMovies[e]\n                return r\n            },{})\n        }  \n    }\n\n    return (   \n        <div className=\"movies\">\n            <h2 className=\"error\">{error}</h2>\n            <h2 className=\"now-showing\">Now showing</h2>\n            <span className=\"filters\">Apply Filters: </span>\n            <span className=\"filter-language\">\n                <label for=\"language\">Language:</label>\n                <select id=\"language\" name=\"language\" onChange={(e) => setLanguage(e.target.value)} value={!language ? \"select-language\" : language} >\n                <option>select-language</option>\n                <option value=\"English\">English</option>\n                <option value=\"Spanish\">Spanish</option>\n                <option value=\"French\">French</option>\n                </select>\n            </span>\n            <span className=\"filter-movietype\">\n                <label for=\"movie-type\">Movie-Type:</label>\n                <select name=\"movie-type\" onChange={(e) => setMovieType(e.target.value)} value={!movieType ? \"select-type\" : movieType}>\n                <option>select-type</option>\n                <option value=\"Thriller\">Thriller</option>\n                <option value=\"Horror\">Horror</option>\n                <option value=\"Comedy\">Comedy</option>\n                </select>\n            </span>\n            <span className=\"filter-location\">\n                <label for=\"location\">Location:</label>\n                <select name=\"location\" onChange={(e) => setLocation(e.target.value)} value={!location ? \"select-location\" : location}>\n                <option>select-location</option>\n                <option value=\"Washington\">Washington</option>\n                <option value=\"California\">California</option>\n                <option value=\"Nevada\">Nevada</option>\n                </select>\n            </span>\n            <button className=\"refresh\" onClick={() => setRefresh(true)}>Reset</button>\n            <div className=\"movie-images\">\n                {Object.keys(filteredMovies).map((movieId) => (\n                    <img className=\"image\" src={filteredMovies[movieId].poster} title={filteredMovies[movieId].title} onClick={() => performReadMovie(movieId)} alt=\"\"/>\n                ))} \n            </div>\n        </div>     \n    );\n}\n\nexport default MovieList;\n","import React from 'react';\nimport {useState} from 'react';\nimport LoggedInPage from './LoggedInPage';\nimport './App.css';\nimport {fetchDeleteBooking} from './services';\n\nfunction MyBookings({bookings, movies, userInfo, performViewBookings}) {\n    const [back, setBack] = useState(false);\n    const [error, setError] = useState();\n    console.log(bookings);\n    const performDelete = (bookingId) => {       \n        setError('');\n\n        fetchDeleteBooking(userInfo, bookingId)\n        .then(() => performViewBookings())\n        .catch((error) => setError(error.message))        \n    }\n\n    if(back){\n        return(\n            <div>\n                <LoggedInPage userInfo={userInfo} movies={movies}/>\n            </div>\n        );       \n    }\n\n    return(\n        <div className=\"bookings\">\n            <h2 className=\"error\">{error}</h2>\n            <h2 className=\"welcome-message\">Hey {userInfo}!!! here are your Bookings</h2>\n            <button className=\"back-button\" onClick={() => setBack(true)}>Return to home page</button>\n            {Object.keys(bookings).map((bookingId) => (    \n                <div className=\"bookings-info\">         \n                    <img className=\"single-image\" src={bookings[bookingId].poster} alt=\"\"/>\n                    <div className=\"movie-details\">\n                        <img className=\"QR-code\" src={bookings[bookingId].QRcode} alt=\"\"/>\n                        <p className=\"title\"><b>Title: </b>{bookings[bookingId].title}</p>\n                        <p className=\"theater\"><b>Theater: </b>{bookings[bookingId].theater}</p>\n                        <p className=\"timing\"><b>Timing: </b>{bookings[bookingId].timing}</p>\n                        <p className=\"Date\"><b>Date: </b>{bookings[bookingId].date}</p>\n                        <p className=\"total\"><b>Total: </b>{bookings[bookingId].total}</p> \n                        <button className=\"delete-booking\" onClick={() => performDelete(bookingId)}>Cancel Booking</button>\n                    </div>\n                </div>              \n            ))}\n        </div>\n    );\n}\n\nexport default MyBookings;","import React from 'react';\nimport {fetchLogOut, fetchGetBookings} from './services';\nimport {useState} from 'react';\nimport LoginPage from './LoginPage';\nimport MovieList from './MovieList';\nimport MyBookings from './MyBookings';\nimport './App.css';\n\nfunction LoggedInPage({userInfo, movies}) {\n    const [error, setError] = useState();\n    const [loggedOut, setloggedOut] = useState(false);\n    const [bookings, setBookings] = useState();\n\n    const performLogout = () => {\n        setError('');\n\n        fetchLogOut()\n        .then(() => setloggedOut(true))\n        .catch((error) => setError(error.message))\n    }\n\n    const performViewBookings = () => {\n        setError('');\n\n        fetchGetBookings(userInfo)\n        .then((bookings) => setBookings(bookings.data))\n        .catch((error) => setError(error.message))\n    }\n\n    if (loggedOut) {\n        return (\n            <LoginPage movies={movies}/>\n        );\n    }\n\n    if (bookings) {\n        return(\n            <div>              \n                <MyBookings bookings={bookings} movies={movies} userInfo={userInfo} performViewBookings={() => performViewBookings()}/>\n            </div>\n        );\n    }\n\n    return(\n        <div> \n            <h2 className=\"error\">{error}</h2>\n            <button className=\"logout-button\" onClick={() => performLogout()}>Logout</button>\n            <button className=\"customers-booking\" onClick={()=>performViewBookings()}>Your bookings</button>\n            <h2 className=\"welcome-message\">Hello {userInfo} !! </h2>\n            <MovieList movies={movies} userInfo={userInfo} status=\"loggedIn\" />\n        </div>\n    );\n}\n\nexport default LoggedInPage;\n","import React from 'react';\nimport {fetchLogIn} from './services';\nimport { useState } from 'react';\nimport LoggedInPage from './LoggedInPage';\nimport MovieList from './MovieList';\nimport './App.css';\n\nfunction LoginPage({movies}){\n    const [userInfo, setUserInfo] = useState();\n    const [username, setUsername] = useState('');\n    const [error, setError] = useState();\n\n    const performLogin = (username) => {\n        if (/^ *$/.test(username) || username.includes('dog')) {\n            setError(\"Enter a valid username\");\n            setUsername('');\n        } else {\n            setError('');\n            fetchLogIn(username)\n            .then((userInfo) => setUserInfo(userInfo.data))\n            .catch((error) => setError(error.message))\n        }   \n    }\n\n    if(userInfo) {\n        return(\n            <LoggedInPage userInfo={userInfo.username}  movies={movies}/>\n        );\n    }\n\n    return(\n        <div className=\"login\">\n            <h2 className=\"error\">{error}</h2>\n            <h3 className=\"warning\">Please Login to Book</h3>\n            <div className=\"form\">\n                <label className=\"username\">Username:<input value={username} onChange={(e) => setUsername(e.target.value)}/></label>\n                <button className=\"login-button\" onClick={() => performLogin(username)}>Login</button>\n            </div>\n            <MovieList movies={movies} userInfo=\"    \" status=\"loggedOut\" />\n        </div>\n    );\n\n}\n\nexport default LoginPage;\n","import React from 'react';\nimport {fetchHomePage} from './services';\nimport { useState, useEffect } from 'react';\nimport LoginPage from './LoginPage';\nimport LoggedInPage from './LoggedInPage';\nimport './App.css';\n\nfunction App() {\n    const [userInfo, setUserInfo] = useState();\n    const[error, setError] = useState();\n    const [movies, setMovies] = useState({});\n    let content;\n\n    useEffect(() => {\n        setError('');\n  \n        fetchHomePage()\n        .then(userInfo => {setUserInfo(userInfo.data.sid.username); setMovies(userInfo.data.moviesList)})\n        .catch(error => {setError(error.message); setMovies(error.data)});  \n    },[]);\n\n    if (error === \"no valid session\") {\n        setError(\"  \")\n    }\n    \n    if (error) {\n        content = <LoginPage movies={movies}/>  \n    } else {\n        content = <LoggedInPage userInfo={userInfo} movies={movies}/>\n    }\n\n    return (\n        <div className=\"App\">\n            <h1 className=\"main-heading\">Book your show!!</h1>\n            <h2 className=\"error\">{error}</h2>\n            {content}\n        </div>\n    );            \n\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}